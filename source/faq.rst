.. _faq:

********
常见问题
********

.. _urls_not_in_a_href:

链接并不是放在a标签的href属性里，该怎么办？
=========================================

可以使用 `findUrlsOverride <./callback.html#findurlsoverride>`_ 回调函数自行抓取url并返回。


.. _can_not_fetch_the_field:

我在浏览器上看到的明明是这个选择器，为什么在程序中抓不到这个字段？
================================================================

首先第一步确认你的选择器是否书写正确，如果是正确的，那么问题一般是由于页面是由js动态渲染上去的，为了确认这一点，你可以在网页上右键查看源代码，然后 `CTRL+F` 搜索特定的关键字，如果源代码中查找不到或者显示的标签的 `id` 、 `class` 等不一致那可以确定该网页是由js动态渲染的。

.. _how_to_fetch_js_rendered_html:

js动态渲染的网页怎么抓取？
=========================

对于动态渲染的页面，其数据来源一般是以下几种形式：
    - 以JSON格式赋值到某个变量中
    - 以JSON格式赋值到对应标签的 `data` 属性里（或者类似的属性里）
    - 动态请求AJAX

对于以上几种情况比较好处理，直接取出数据并做处理即可，对于一些较高的动态渲染手段，可以结合 `PhantomJS` 、 `Chromeless` 等自动化技术进行抓取。

.. _how_to_anti_aiti_spider:

我被网站反爬虫，改怎么办？
========================

`反爬虫` & `反反爬虫` 是每一个采集人必然会经历的。正所谓知自知彼百战百胜，只有你对网站有足够的了解才能写出一个合格的采集脚本，对于网站的技术分析评估是非常关键的，至少能从网站的各种行为以及表现中大概猜出网站的反爬虫手段，这样你才能进行反反爬虫。但是也有一般性的万能解决方案：
    - 降低采集频率
    - 分布式、分批定时采集（单机短时间大量采集是大忌）
    - 代理

不进行反反爬虫才是最高级的反反爬虫境界，因为这意味着你的爬虫脚本已经完美到能被网站识别为“人类操作”了。

知自知彼百战百胜！知自知彼百战百胜！知自知彼百战百胜！

单机短时间大量采集是大忌！单机短时间大量采集是大忌！单机短时间大量采集是大忌！

急于求成也是大忌！急于求成也是大忌！急于求成也是大忌！想要短时间获取别人几十万几百万的数据是非常糟糕的想法！无论你有什么技术手段解决！
